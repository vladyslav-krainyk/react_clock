{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timeInterval","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","props","name","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerId","handleLeftMouseButton","handleRightMouseButton","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,aAAe,EALjB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAZP,gCAeE,SAAmBC,GACbR,KAAKS,MAAMC,OAASF,EAAUE,MAEhCN,QAAQO,MAAR,uBAA8BH,EAAUE,KAAxC,eAAmDV,KAAKS,MAAMC,SAlBpE,kCAsBE,WACEE,cAAcZ,KAAKD,gBAvBvB,oBA0BE,WACE,IAAQW,EAASV,KAAKS,MAAdC,KACAb,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGhB,EAAKS,cAAcC,OAAO,IAAK,YAvC1C,GAA2BO,a,MCL3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAQX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,EAsBEC,sBAAwB,WACtB,EAAKpB,SAAS,CAAEiB,UAAU,KAvB9B,EA0BEI,uBAAyB,SAACC,GACxBA,EAAMC,iBACN,EAAKvB,SAAS,CAAEiB,UAAU,KA5B9B,uDAQE,WAAqB,IAAD,OAClBpB,KAAKsB,QAAUrB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWN,QAC1B,MACHY,SAASC,iBAAiB,QAAS5B,KAAKuB,uBACxCI,SAASC,iBAAiB,cAAe5B,KAAKwB,0BAblD,kCAgBE,WACEvB,OAAOW,cAAcZ,KAAKsB,SAC1BK,SAASE,oBAAoB,QAAS7B,KAAKuB,uBAC3CI,SAASE,oBAAoB,cAAe7B,KAAKwB,0BAnBrD,oBA+BE,WACE,MAAgCxB,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECO,GACC,cAAC,EAAD,CAAOV,KAAMW,WAvCvB,GAAyBP,aCbzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.83a0dcfc.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  time: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timeInterval = 0;\n\n  componentDidMount() {\n    this.timeInterval = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeInterval);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    document.addEventListener('click', this.handleLeftMouseButton);\n    document.addEventListener('contextmenu', this.handleRightMouseButton);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('click', this.handleLeftMouseButton);\n    document.removeEventListener('contextmenu', this.handleRightMouseButton);\n  }\n\n  handleLeftMouseButton = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleRightMouseButton = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n\n// export const App: React.FC = () => {\n//   const today = new Date();\n//   let clockName = 'Clock-0';\n\n//   // This code starts a timer\n//   const timerId = window.setInterval(() => {\n//     clockName = getRandomName();\n//   }, 3300);\n\n//   // this code stops the timer\n//   window.clearInterval(timerId);\n\n//   return (\n//     <div className=\"App\">\n//       <h1>React clock</h1>\n\n//       <div className=\"Clock\">\n//         <strong className=\"Clock__name\">\n//           {clockName}\n//         </strong>\n\n//         {' time is '}\n\n//         <span className=\"Clock__time\">\n//           {today.toUTCString().slice(-12, -4)}\n//         </span>\n//       </div>\n//     </div>\n//   );\n// };\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}